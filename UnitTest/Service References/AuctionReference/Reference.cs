//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UnitTest.AuctionReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AuctionReference.IAuctionService")]
    public interface IAuctionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/Add", ReplyAction="http://tempuri.org/IAuctionService/AddResponse")]
        void Add(WCFBusinessLogic.Model.Auction auction);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/Add", ReplyAction="http://tempuri.org/IAuctionService/AddResponse")]
        System.Threading.Tasks.Task AddAsync(WCFBusinessLogic.Model.Auction auction);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/Update", ReplyAction="http://tempuri.org/IAuctionService/UpdateResponse")]
        void Update(WCFBusinessLogic.Model.Auction auction);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/Update", ReplyAction="http://tempuri.org/IAuctionService/UpdateResponse")]
        System.Threading.Tasks.Task UpdateAsync(WCFBusinessLogic.Model.Auction auction);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetAll", ReplyAction="http://tempuri.org/IAuctionService/GetAllResponse")]
        WCFBusinessLogic.Model.Auction[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetAll", ReplyAction="http://tempuri.org/IAuctionService/GetAllResponse")]
        System.Threading.Tasks.Task<WCFBusinessLogic.Model.Auction[]> GetAllAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAuctionServiceChannel : UnitTest.AuctionReference.IAuctionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuctionServiceClient : System.ServiceModel.ClientBase<UnitTest.AuctionReference.IAuctionService>, UnitTest.AuctionReference.IAuctionService {
        
        public AuctionServiceClient() {
        }
        
        public AuctionServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AuctionServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuctionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuctionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Add(WCFBusinessLogic.Model.Auction auction) {
            base.Channel.Add(auction);
        }
        
        public System.Threading.Tasks.Task AddAsync(WCFBusinessLogic.Model.Auction auction) {
            return base.Channel.AddAsync(auction);
        }
        
        public void Update(WCFBusinessLogic.Model.Auction auction) {
            base.Channel.Update(auction);
        }
        
        public System.Threading.Tasks.Task UpdateAsync(WCFBusinessLogic.Model.Auction auction) {
            return base.Channel.UpdateAsync(auction);
        }
        
        public WCFBusinessLogic.Model.Auction[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<WCFBusinessLogic.Model.Auction[]> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
    }
}
